//api.js
var http = require("http");
var mongo = require('mongodb');
//var mongodb://<user>:<password>@troup.mongohq.com:10049/daily-dally
var MongoClient = mongo.MongoClient;
var db = '';

MongoClient.connect(process.env.MONGOHQ_URL, function(err, db2){
  console.log("swag");
    if (!err){
      console.log("Connected");
      db = db2;
      db2.collection('user');
    } 
});

exports.addUser = function(req, res){
  console.log("adding user");
  var name = req.params.name;
  var jsonObj = {};
  jsonObj['user'] = {'username':name};
  db.collection('user').insert(jsonObj,{safe:true}, function(err, result){
    if (err){
      res.send({'error':'Cannot insert user'});
    }
    else{
      res.send(result[0]);
    }
  });
};

exports.addActivity = function(req, res){
  console.log("adding activity");
  var activityName = req.params.name;
  var metricUnit = req.params.unit;
  var username = req.params.username; //TODO: REPLACE with LOGIN
  
  var query = {};
  query['user'] = {'username' : username};
  
  var tmpDumbObj =  [{
                 "name": activityName,
                 "metric_unit": metricUnit,
                 "data": []
                }];
  var tmpObj = {};
  tmpObj['activities'] = tmpDumbObj;
  var jsonObj = {};
  jsonObj[username] = {$set: {'activities':tmpDumbObj}};
  db.collection('user', function(err, collection){
    collection.update(query, {$set:
                              {"activities": tmpDumbObj}}, 
      function(err, result){
      if (err)
        res.send(err);
      else
        res.send("Successfully added: "+ username + result[0]);
    });
  });
};

exports.uploadProgress = function(req, res){
  console.log("uploading progress");
  //var date = Date();
  var date = req.param('date');
  var metricVal = req.param('metricVal');
  var media = req.param('media');
  var desc = req.param('desc');
  var username = req.param('username'); //TODO: REPLACE with LOGIN
  var activity = req.param('activity');
  
  var dataArr = [{'date': date,
              'metric_val': metricVal,
              'media': media,
              'desc': desc
              }];
  var jsonObj = {"activities.data": dataArr};
  var query = {};
  query['user'] = {'username': username };
  db.collection('user', function(err, collection){
    collection.update(query, {$set: jsonObj}, function(err, result){
      if (err)
        res.send(err);
      else
        res.send("Successfully uploaded progress for " + username);
    });
  });
};

exports.redirect = function(req,res){
  res.writeHead(302, {'Location':'/site/landing.html'});
  res.end();
};

exports.removeAllUsers = function(req,res){
  db.collection('user', function(err, collection){
    collection.remove(function(err, result){
      if( err)
        res.send(err);
      else
        res.send(result[0]);
    });
    res.send("Okay, deleted all users");
  });
};

exports.showAllUsers = function(req,res){
  console.log("showing all users");
  db.collection('user').find().toArray(function(err,users){
    res.send(users);
  });
};

exports.populateDB = function(req, res){
  for (var i = 0; i < 200; i++ ){
     var date = "2014-01-22";
      var metricVal = Math.random() * 24;
      var media = null;
      var desc = 'this is super cool';
      var username = 'todd';
      
      var dataArr = [{'date': date,
                  'metric_val': metricVal,
                  'media': media,
                  'desc': desc
                  }];
      var jsonObj = {'data': dataArr};
      var query = {};
      query['user'] = {'username': username };
      db.collection('user', function(err, collection){
        collection.update(query, {$set: jsonObj}, function(err, result){
          if (err)
            res.send(err);
          else
            res.send("Successfully uploaded progress for " + username);
        });
      });
  }
};

exports.register = function(req,res){
  var name = req.params.name;
  var jsonObj = {};
  jsonObj['user'] = {'username':name};
  db.collection('user').insert(jsonObj,{safe:true}, function(err, result){
    if (err){
      res.send({'error':'Cannot register user'});
    }
    else{
      res.send(200);
    }
  });
};

exports.login = function(req, res){
  var email = req.email;
  db.collection('user').find({'email':email})
};

/* Example Documents
{
  'user':{
    'username': alan
  }
  'activities':[
    {
      'name':'running',
      'type':'sports',
      'metric_unit': 'mi',
      'data':[
        {
          'date': '2014-01-25',
          'metric_val': 4
          'image': '/assets/alan-kha/running-2014-01-15.jpg',
          'desc': 'Today i ran a bunch of miles and it was great.'
        }
      ]
    }],
  '_id: objectId,
}
{
  'user':{
    'username': todd
  }
  'activities':[
    {
      'name':'coding',
      'type':'skills',
      'metric_unit': 'lines',
      'data':[
        {
          'date': '2014-01-25',
          'metric_val': 28
          'image': '/assets/alan-kha/coding-2014-01-15.jpg',
          'desc': 'Today i wrote 28 lines of code and it was great.'
        }
      ]
    }],
  '_id: objectId,
}
*/
